{"version":3,"sources":["gif.gif","styles/globalStyles.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","styled","div","image","SpacerXSmall","flex","fd","jc","ai","test","p","App","Component","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","presale","Contract","Presale","abi","usdc","IERC20","usdt","wmatic","appValue","tokensSold","state","methods","_tokensSold","call","from","then","result","currentRound","_currentRound","leftInRound","_rounds","_tokensLeft","leftInRoundPercent","userVested","viewVestedTokens","utils","fromWei","usdcApproved","allowance","usdtApproved","wmaticApproved","constructor","props","super","approveUsdc","description","console","log","this","approve","send","approveUsdt","approveWMatic","buyUsdc","message","buyWithUsdc","buyUsdt","buyWithUsdt","buyWMatic","buyWithWMatic","claim","updateNumber","e","val","target","value","validity","valid","loading","bind","render","className","href","rel","role","src","gif","alt","type","placeholder","onChange","pattern","style","height","width","onClick","preventDefault","parseInt","id","nrOfLevels","percent","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e16f8820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif.db8a9013.gif\";","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Web3 from 'web3';\r\nimport IERC20 from '../abis/IERC20.json'\r\nimport Presale from '../abis/BlaqPresale.json'\r\nimport gif from '../gif.gif';\r\nimport * as s from \"../styles/globalStyles\";\r\nimport GaugeChart from 'react-gauge-chart'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass App extends Component {\r\n  \r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = 137 === networkId\r\n    if(networkData) {\r\n      const presale = new web3.eth.Contract(Presale.abi, \"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\")\r\n      this.setState({presale})\r\n      const usdc = new web3.eth.Contract(IERC20.abi, \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\")\r\n      this.setState({usdc})\r\n      const usdt = new web3.eth.Contract(IERC20.abi, \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\")\r\n      this.setState({usdt})\r\n      const wmatic = new web3.eth.Contract(IERC20.abi, \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\")\r\n      this.setState({wmatic})\r\n      const appValue = \"10000000000000000000000000000000000000000000000000000000000000000\";\r\n      this.setState({appValue})\r\n\r\n      var tokensSold = 0;\r\n      await this.state.presale.methods._tokensSold().call({from: this.state.account}).then(function(result){\r\n        tokensSold = result;\r\n      })\r\n      this.setState({tokensSold})\r\n\r\n      var currentRound = 0;\r\n      await this.state.presale.methods._currentRound().call({from: this.state.account}).then(function(result){\r\n        currentRound = result;\r\n      })\r\n      this.setState({currentRound})\r\n\r\n      var leftInRound = 0;\r\n      await this.state.presale.methods._rounds(this.state.currentRound).call({from: this.state.account}).then(function(result){\r\n        leftInRound = result._tokensLeft\r\n      })\r\n      this.setState({leftInRound})\r\n      \r\n      var leftInRoundPercent = leftInRound / 1250\r\n      this.setState({leftInRoundPercent})\r\n\r\n      var userVested = 1;\r\n      await this.state.presale.methods.viewVestedTokens(this.state.account).call({from: this.state.account}).then(function(result){\r\n        userVested = web3.utils.fromWei(result, 'ether')\r\n      })\r\n      this.setState({userVested})\r\n\r\n      var usdcApproved = 0;\r\n      await this.state.usdc.methods.allowance(this.state.account, \"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\").call().then(function(result){\r\n        usdcApproved = web3.utils.fromWei(result, 'ether')\r\n      })\r\n      this.setState({usdcApproved})\r\n      \r\n      var usdtApproved = 0;\r\n      await this.state.usdt.methods.allowance(this.state.account, \"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\").call().then(function(result){\r\n        usdtApproved = web3.utils.fromWei(result, 'ether')\r\n      })\r\n      this.setState({usdtApproved})\r\n     \r\n      var wmaticApproved = 0;\r\n      await this.state.wmatic.methods.allowance(this.state.account, \"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\").call().then(function(result){\r\n        wmaticApproved = web3.utils.fromWei(result, 'ether')\r\n      })\r\n      this.setState({wmaticApproved})\r\n     \r\n    } else {\r\n      window.alert('You are not connected to the Polygon network.')\r\n    }\r\n  }\r\n\r\n  approveUsdc = description => {\r\n    console.log(\"Approving USDC\")\r\n    this.state.usdc.methods.approve(\"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\", this.state.appValue).send({ from: this.state.account })\r\n  }\r\n\r\n  approveUsdt = description => {\r\n    console.log(\"Approving USDT\")\r\n    this.state.usdt.methods.approve(\"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\", this.state.appValue).send({ from: this.state.account })\r\n  }\r\n\r\n  approveWMatic = description => {\r\n    console.log(\"Approving WMatic\")\r\n    this.state.wmatic.methods.approve(\"0x28A58961A439DDd49a07Ca87B46e0039e77f7D2c\", this.state.appValue).send({ from: this.state.account })\r\n  }\r\n\r\n  buyUsdc = description => {\r\n    console.log(this.state.message)\r\n    this.state.presale.methods.buyWithUsdc(this.state.message).send({from: this.state.account})\r\n\r\n  }\r\n  \r\n  buyUsdt = description => {\r\n    console.log(this.state.appValue)\r\n    this.state.presale.methods.buyWithUsdt(this.state.message).send({from: this.state.account})\r\n  }\r\n\r\n  buyWMatic = description => {\r\n    console.log(this.state.appValue)\r\n    this.state.presale.methods.buyWithWMatic(this.state.message).send({from: this.state.account})\r\n  }\r\n\r\n  claim = description => {\r\n    this.state.presale.methods.claim().send({from: this.state.account})\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      loading: true,\r\n      appValue: 0,\r\n      message: 0\r\n    }\r\n\r\n    this.claim = this.claim.bind(this)\r\n    this.approveUsdc = this.approveUsdc.bind(this)\r\n    this.approveUsdt = this.approveUsdt.bind(this)\r\n    this.approveWMatic = this.approveWMatic.bind(this)\r\n    this.buyUsdc = this.buyUsdc.bind(this)\r\n    this.buyUsdt = this.buyUsdt.bind(this)\r\n    this.buyWMatic = this.buyWMatic.bind(this)\r\n\r\n  }\r\n  state = {message: '3'};\r\n\r\n  updateNumber = (e) => {\r\n    const val = e.target.value;\r\n    // If the current value passes the validity test then apply that to state\r\n    if (e.target.validity.valid) this.setState({message: e.target.value}); \r\n    // If the current val is just the negation sign, or it's been provided an empty string,\r\n    // then apply that value to state - we still have to validate this input before processing\r\n    // it to some other component or data structure, but it frees up our input the way a user\r\n    // would expect to interact with this component\r\n    else if (val === '' || val === '-') this.setState({message: val});\r\n  }\r\n  render() {\r\n    return (\r\n      \r\n      <div  className='App'>\r\n      \r\n      <div >\r\n        \r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            BLAQ Presale\r\n          </a>\r\n          \r\n        </nav>\r\n        <center>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 text-center\">\r\n              \r\n              <div className=\"content mr-auto ml-auto\">\r\n               \r\n                  <img src={gif} className=\"App-logo\" alt=\"logo\" />\r\n                  \r\n                \r\n                <h1>Blaq Token Presale</h1>\r\n                <p>\r\n                  Purchase Blaq Tokens for USDC, USDT or wMatic\r\n                </p>\r\n\r\n                  \r\n                <s.SpacerXSmall/>\r\n                <p>\r\n                  You have purchased {this.state.userVested} tokens that are currently vesting.\r\n                </p>\r\n                <input\r\n                    type='tel'\r\n                    placeholder=\"0\"\r\n                    value={this.state.message}\r\n                    onChange={this.updateNumber}\r\n                    pattern=\"^-?[0-9]\\d*\\.?\\d*$\"\r\n                    />\r\n                  <s.SpacerXSmall />\r\n                <button  className='buy-button'  style={{height: '50px', width : '200px'}}\r\n                      \r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        if(parseInt(this.state.usdcApproved) > 0) {\r\n                          \r\n                          this.buyUsdc();\r\n                        } else {\r\n                          this.approveUsdc();\r\n                        }\r\n                      }}\r\n                      >Buy with USDC</button> \r\n                <button  className='buy-button'     style={{height: '50px', width : '200px'}}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        if(parseInt(this.state.usdtApproved) > 0) {\r\n                          this.buyUsdt();\r\n                        } else {\r\n                          this.approveUsdt();\r\n                        }\r\n                      }}\r\n                      >Buy with USDT</button> \r\n                <button  className='buy-button'     style={{height: '50px', width : '200px'}}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        if(parseInt(this.state.wmaticApproved) > 0) {\r\n                          this.buyWMatic();\r\n                        } else {\r\n                          this.approveWMatic();\r\n                        }\r\n                      }}\r\n                      >Buy with wMatic</button>   \r\n                <s.SpacerXSmall/>  \r\n              </div>\r\n            </main>\r\n\r\n            <Container className='gaugeArea'>\r\n                <Container className='gaugeInfo'>\r\n                <p>\r\n                  {this.state.leftInRound} Current Round Sales\r\n                </p>\r\n\r\n                <GaugeChart className='gauge' id=\"gauge-chart2\" \r\n                  nrOfLevels={20} \r\n                      \r\n                \r\n                  percent={this.state.leftInRoundPercent}\r\n                \r\n                />\r\n\r\n                </Container>\r\n                \r\n                <Container className='gaugeInfo'>\r\n                <p>\r\n                  {this.state.tokensSold} Blaq Tokens Sold so Far!\r\n                </p>\r\n\r\n                <GaugeChart className='gauge' id=\"gauge-chart2\" \r\n                 nrOfLevels={20} \r\n                percent={this.state.tokensSold/5000} />\r\n\r\n                </Container>\r\n\r\n                <Container className='gaugeInfo'>\r\n                <p>\r\n                  Round {this.state.currentRound} \r\n                </p>\r\n\r\n                <GaugeChart className='gauge' id=\"gauge-chart2\" \r\n                 nrOfLevels={20} \r\n                percent={(this.state.currentRound-1)*0.25} />\r\n                \r\n\r\n\r\n                </Container>\r\n\r\n\r\n\r\n                </Container>\r\n          </div>\r\n        </div>\r\n        </center>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}