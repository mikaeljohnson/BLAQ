{"version":3,"sources":["gif.gif","styles/globalStyles.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SpacerXSmall","styled","div","image","flex","fd","jc","ai","test","p","App","props","approveUsdc","description","console","log","state","usdc","methods","approve","presaleAddress","appValue","send","from","account","approveUsdt","usdt","approveWMatic","wmatic","buyUsdc","message","presale","buyWithUsdc","then","result","catch","err","buyUsdt","buyWithUsdt","buyWMatic","buyWithWMatic","claim","updateNumber","e","val","target","value","validity","valid","setState","loading","bind","a","this","loadWeb3","loadBlockchainData","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","Contract","Presale","abi","IERC20","tokensSold","_tokensSold","call","tokenPrice","currentRound","_currentRound","leftInRound","_rounds","_tokensLeft","leftInRoundPercent","userVested","viewVestedTokens","utils","fromWei","usdcApproved","allowance","usdtApproved","wmaticApproved","className","href","rel","role","src","gif","alt","type","placeholder","onChange","pattern","style","height","width","onClick","preventDefault","parseInt","id","nrOfLevels","percent","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.973ce171.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif.db8a9013.gif\";","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 12px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport IERC20 from '../abis/IERC20.json'\nimport Presale from '../abis/BlaqPresale.json'\nimport gif from '../gif.gif';\nimport * as s from \"../styles/globalStyles\";\nimport GaugeChart from 'react-gauge-chart'\nimport { Container } from 'react-bootstrap';\n\nclass App extends Component {\n  \n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const presaleAddress = \"0x27E6276E43eE437a718408c81eB016d66FA7E84F\"\n    this.setState({presaleAddress})\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = 137 === networkId\n    if(networkData) {\n      const presale = new web3.eth.Contract(Presale.abi, presaleAddress)\n      this.setState({presale})\n      const usdc = new web3.eth.Contract(IERC20.abi, \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\")\n      this.setState({usdc})\n      const usdt = new web3.eth.Contract(IERC20.abi, \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\")\n      this.setState({usdt})\n      const wmatic = new web3.eth.Contract(IERC20.abi, \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\")\n      this.setState({wmatic})\n      const appValue = \"10000000000000000000000000000000000000000000000000000000000000000\";\n      this.setState({appValue})\n      var tokensSold = 0;\n      await this.state.presale.methods._tokensSold().call({from: this.state.account}).then(function(result){\n        tokensSold = result;\n      })\n      this.setState({tokensSold})\n      \n      var tokenPrice = 0.30;\n\n      this.setState({tokenPrice})\n      var currentRound = 0;\n      await this.state.presale.methods._currentRound().call({from: this.state.account}).then(function(result){\n        currentRound = result;\n      })\n      this.setState({currentRound})\n\n      var leftInRound = 0;\n      await this.state.presale.methods._rounds(this.state.currentRound).call({from: this.state.account}).then(function(result){\n        leftInRound = result._tokensLeft\n      })\n      this.setState({leftInRound})\n      \n      var leftInRoundPercent = (leftInRound - 12500000) / 12000000\n      this.setState({leftInRoundPercent})\n\n      var userVested = 1;\n      await this.state.presale.methods.viewVestedTokens(this.state.account).call({from: this.state.account}).then(function(result){\n        userVested = web3.utils.fromWei(result, 'ether')\n      })\n      this.setState({userVested})\n\n      var usdcApproved = 0;\n      await this.state.usdc.methods.allowance(this.state.account, this.state.presaleAddress).call().then(function(result){\n        usdcApproved = web3.utils.fromWei(result, 'ether')\n      })\n      this.setState({usdcApproved})\n      console.log(usdcApproved)\n      var usdtApproved = 0;\n      await this.state.usdt.methods.allowance(this.state.account, this.state.presaleAddress).call().then(function(result){\n        usdtApproved = web3.utils.fromWei(result, 'ether')\n      })\n      this.setState({usdtApproved})\n     \n      var wmaticApproved = 0;\n      await this.state.wmatic.methods.allowance(this.state.account, this.state.presaleAddress).call().then(function(result){\n        wmaticApproved = web3.utils.fromWei(result, 'ether')\n      })\n      this.setState({wmaticApproved})\n     \n    } else {\n      window.alert('You are not connected to the Polygon network.')\n    }\n  }\n\n  approveUsdc = description => {\n    console.log(\"Approving USDC\")\n    this.state.usdc.methods.approve(this.state.presaleAddress, this.state.appValue).send({ from: this.state.account })\n  }\n\n  approveUsdt = description => {\n    console.log(\"Approving USDT\")\n    this.state.usdt.methods.approve(this.state.presaleAddress, this.state.appValue).send({ from: this.state.account })\n  }\n\n  approveWMatic = description => {\n    console.log(\"Approving WMatic\")\n    this.state.wmatic.methods.approve(this.state.presaleAddress, this.state.appValue).send({ from: this.state.account })\n  }\n\n  buyUsdc = description => {\n    console.log(this.state.message)\n    this.state.presale.methods.buyWithUsdc(this.state.message).send({from: this.state.account}).then((result) => {\n      console.log(\"Success! Got result: \" + result);\n    }).catch((err) => {\n      console.log(\"Failed with error: \" + err);\n    });\n\n  }\n  \n  buyUsdt = description => {\n    console.log(this.state.appValue)\n    this.state.presale.methods.buyWithUsdt(this.state.message).send({from: this.state.account}).then((result) => {\n      console.log(\"Success! Got result: \" + result);\n    }).catch((err) => {\n      console.log(\"Failed with error: \" + err);\n    });\n  }\n\n  buyWMatic = description => {\n    console.log(this.state.appValue)\n    this.state.presale.methods.buyWithWMatic(this.state.message).send({from: this.state.account}).then((result) => {\n      console.log(\"Success! Got result: \" + result);\n    }).catch((err) => {\n      console.log(\"Failed with error: \" + err);\n    });\n  }\n\n  claim = description => {\n    this.state.presale.methods.claim().send({from: this.state.account})\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      loading: true,\n      appValue: 0,\n      message: 0\n    }\n\n    this.claim = this.claim.bind(this)\n    this.approveUsdc = this.approveUsdc.bind(this)\n    this.approveUsdt = this.approveUsdt.bind(this)\n    this.approveWMatic = this.approveWMatic.bind(this)\n    this.buyUsdc = this.buyUsdc.bind(this)\n    this.buyUsdt = this.buyUsdt.bind(this)\n    this.buyWMatic = this.buyWMatic.bind(this)\n\n  }\n  state = {message: '3'};\n\n  updateNumber = (e) => {\n    const val = e.target.value;\n    // If the current value passes the validity test then apply that to state\n    if (e.target.validity.valid) this.setState({message: e.target.value}); \n    // If the current val is just the negation sign, or it's been provided an empty string,\n    // then apply that value to state - we still have to validate this input before processing\n    // it to some other component or data structure, but it frees up our input the way a user\n    // would expect to interact with this component\n    else if (val === '' || val === '-') this.setState({message: val});\n  }\n  render() {\n    return (\n      \n      <div  className='App'>\n      \n      <div >\n        \n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            BLAQ Presale\n          </a>\n          \n        </nav>\n        <center>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 text-center\">\n              \n              <div className=\"content mr-auto ml-auto\">\n               \n                  <img src={gif} className=\"App-logo\" alt=\"logo\" />\n                  \n                \n                <h1>Blaq Token Presale</h1>\n                <p>\n                  Purchase Blaq Tokens for ${this.state.tokenPrice} USDC, USDT or wMatic Equivalent\n                </p>\n\n                  \n                <s.SpacerXSmall/>\n                <p>\n                  You have purchased {this.state.userVested} tokens that are currently vesting.\n                </p>\n                <input\n                    type='tel'\n                    placeholder=\"0\"\n                    value={this.state.message}\n                    onChange={this.updateNumber}\n                    pattern=\"^-?[0-9]\\d*\\.?\\d*$\"\n                    />\n                  <s.SpacerXSmall />\n                <button  className='buy-button'  style={{height: '50px', width : '200px'}}\n                      \n                      onClick={(e) => {\n                        e.preventDefault();\n                        if(parseInt(this.state.usdcApproved) > 0) {\n                          \n                          this.buyUsdc();\n                        } else {\n                          this.approveUsdc();\n                        }\n                      }}\n                      >Buy with USDC</button> \n                <button  className='buy-button'     style={{height: '50px', width : '200px'}}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if(parseInt(this.state.usdtApproved) > 0) {\n                          this.buyUsdt();\n                        } else {\n                          this.approveUsdt();\n                        }\n                      }}\n                      >Buy with USDT</button> \n                <button  className='buy-button'     style={{height: '50px', width : '200px'}}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if(parseInt(this.state.wmaticApproved) > 0) {\n                          this.buyWMatic().then((result) => {\n                            console.log(\"Success! Got result: \" + result);\n                          }).catch((err) => {\n                            console.log(\"Failed with error: \" + err);\n                          });\n                        } else {\n                          this.approveWMatic();\n                        }\n                      }}\n                      >Buy with wMatic</button>   \n                <s.SpacerXSmall/>  \n              </div>\n            </main>\n\n            <Container className='gaugeArea'>\n                <Container className='gaugeInfo'>\n                <p>\n                  {this.state.leftInRound} Left in Round\n                </p>\n\n                <GaugeChart className='gauge' id=\"gauge-chart2\" \n                  nrOfLevels={20} \n                      \n                \n                  percent={this.state.leftInRoundPercent}\n                \n                />\n                <p>\n                  Round Sales\n                </p>\n                </Container>\n                \n                <Container className='gaugeInfo'>\n                <p>\n                  {this.state.tokensSold} Blaq Tokens Sold so Far!\n                </p>\n\n                <GaugeChart className='gauge' id=\"gauge-chart2\" \n                 nrOfLevels={20} \n                percent={this.state.tokensSold/5000} />\n\n                </Container>\n\n                <Container className='gaugeInfo'>\n                <p>\n                  Round {this.state.currentRound} \n                </p>\n\n                <GaugeChart className='gauge' id=\"gauge-chart2\" \n                 nrOfLevels={20} \n                percent={(this.state.currentRound-1)*0.25} />\n                \n\n\n                </Container>\n\n\n\n                </Container>\n          </div>\n        </div>\n        </center>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}